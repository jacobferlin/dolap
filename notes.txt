cube(con, ProductCube) %>%
  with_member("Profit AS '[MerchandiseSales]-[MerchandiseSalesCOGS]'") %>%
  values(Profit,
         MerchandiseSalesQty) %>%
  rows(Date.Year, Product.ProductGroupCurrent) %>%
  filters(Product.ProductBusinessGroup == "Jotex") %>%
  arrange(desc(MerchandiseSalesQty)) %>%
  top_n(10)

WITH MEMBER "Profit AS '[MerchandiseSales]-[MerchandiseSalesCOGS]'"
SELECT
  { [Measures].[Profit],
    [Measures].[MerchandiseSalesQty] } ON 0,
  HEAD (
    ORDER(
      ( [Date].[Year].CHILDREN,
        [Product].[ProductGroupCurrent].CHILDREN ),
      [Measures].[MerchandiseSalesQty],
      BDESC),
    10 ) ON 1
FROM ( SELECT [Product].[ProductBusinessGroup].[Jotex] ON 0,
       FROM [ProductCube] )

TODO
 - Are all scenarios covered with wrapping "... ON 1" with functions?
  + arrange() %>%
      top_n() Check!
  + rows(DateValue) %>%
      filter(MerchandiseSalesQty > 1000) Check!
   * https://docs.microsoft.com/en-us/sql/mdx/filter-mdx?view=sql-server-2017
   * I think this would work
  + rows(DateValue) %>%
      filter(MerchandiseSalesQty > 1000) %>%
      summarize(MerchandiseSalesQty = sum(MerchandiseSalesQty))
